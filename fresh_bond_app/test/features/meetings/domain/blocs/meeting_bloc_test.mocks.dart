// Mocks generated by Mockito 5.4.5 from annotations
// in fresh_bond_app/test/features/meetings/domain/blocs/meeting_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fresh_bond_app/features/meetings/domain/models/meeting_model.dart'
    as _i2;
import 'package:fresh_bond_app/features/meetings/domain/repositories/meeting_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMeetingModel_0 extends _i1.SmartFake implements _i2.MeetingModel {
  _FakeMeetingModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MeetingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeetingRepository extends _i1.Mock implements _i3.MeetingRepository {
  MockMeetingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.MeetingModel?> getMeeting(String? meetingId) =>
      (super.noSuchMethod(
            Invocation.method(#getMeeting, [meetingId]),
            returnValue: _i4.Future<_i2.MeetingModel?>.value(),
          )
          as _i4.Future<_i2.MeetingModel?>);

  @override
  _i4.Future<List<_i2.MeetingModel>> getMeetingsForCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getMeetingsForCurrentUser, []),
            returnValue: _i4.Future<List<_i2.MeetingModel>>.value(
              <_i2.MeetingModel>[],
            ),
          )
          as _i4.Future<List<_i2.MeetingModel>>);

  @override
  _i4.Future<List<_i2.MeetingModel>> getMeetingsByStatus(
    _i2.MeetingStatus? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMeetingsByStatus, [status]),
            returnValue: _i4.Future<List<_i2.MeetingModel>>.value(
              <_i2.MeetingModel>[],
            ),
          )
          as _i4.Future<List<_i2.MeetingModel>>);

  @override
  _i4.Future<List<_i2.MeetingModel>> getUpcomingMeetings() =>
      (super.noSuchMethod(
            Invocation.method(#getUpcomingMeetings, []),
            returnValue: _i4.Future<List<_i2.MeetingModel>>.value(
              <_i2.MeetingModel>[],
            ),
          )
          as _i4.Future<List<_i2.MeetingModel>>);

  @override
  _i4.Future<List<_i2.MeetingModel>> getPastMeetings() =>
      (super.noSuchMethod(
            Invocation.method(#getPastMeetings, []),
            returnValue: _i4.Future<List<_i2.MeetingModel>>.value(
              <_i2.MeetingModel>[],
            ),
          )
          as _i4.Future<List<_i2.MeetingModel>>);

  @override
  _i4.Future<_i2.MeetingModel> createMeeting(_i2.MeetingModel? meeting) =>
      (super.noSuchMethod(
            Invocation.method(#createMeeting, [meeting]),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(#createMeeting, [meeting]),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);

  @override
  _i4.Future<_i2.MeetingModel> updateMeeting(_i2.MeetingModel? meeting) =>
      (super.noSuchMethod(
            Invocation.method(#updateMeeting, [meeting]),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(#updateMeeting, [meeting]),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);

  @override
  _i4.Future<void> deleteMeeting(String? meetingId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMeeting, [meetingId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.MeetingModel> cancelMeeting(
    String? meetingId, {
    String? reason,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#cancelMeeting, [meetingId], {#reason: reason}),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(
                  #cancelMeeting,
                  [meetingId],
                  {#reason: reason},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);

  @override
  _i4.Future<_i2.MeetingModel> confirmMeeting(String? meetingId) =>
      (super.noSuchMethod(
            Invocation.method(#confirmMeeting, [meetingId]),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(#confirmMeeting, [meetingId]),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);

  @override
  _i4.Future<_i2.MeetingModel> rescheduleMeeting(
    String? meetingId,
    DateTime? newDateTime, {
    int? newDurationMinutes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #rescheduleMeeting,
              [meetingId, newDateTime],
              {#newDurationMinutes: newDurationMinutes},
            ),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(
                  #rescheduleMeeting,
                  [meetingId, newDateTime],
                  {#newDurationMinutes: newDurationMinutes},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);

  @override
  _i4.Future<_i2.MeetingModel> completeMeeting(String? meetingId) =>
      (super.noSuchMethod(
            Invocation.method(#completeMeeting, [meetingId]),
            returnValue: _i4.Future<_i2.MeetingModel>.value(
              _FakeMeetingModel_0(
                this,
                Invocation.method(#completeMeeting, [meetingId]),
              ),
            ),
          )
          as _i4.Future<_i2.MeetingModel>);
}
